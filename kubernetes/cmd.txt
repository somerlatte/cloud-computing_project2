# Baixar os dados do dataset
wget https://raw.githubusercontent.com/somerlatte/cloud-computing_project2/refs/heads/main/data/2023_spotify_ds1.csv -O playlist-sample-ds1.csv

# Construir e publicar as imagens Docker
docker build . -t lisker/flask-docker:latest
docker push lisker/flask-docker:latest
docker build . -t lisker/ml-docker:latest
docker push lisker/ml-docker:latest

# Testar o serviço Flask localmente
docker run -id -p 5000:5000 --name=flask lisker/flask-docker:latest
docker run -id --name=ml lisker/ml-docker:latest

# Aplicar recursos no Kubernetes
kubectl apply -f volume.yaml
kubectl apply -f pvc.yaml
kubectl apply -f service.yaml
kubectl apply -f deployment.yaml

# Verificar os recursos
kubectl get pv
kubectl get pvc
kubectl get pods
kubectl get services
kubectl get deployments

# Configuração e login no ArgoCD
kubectl patch svc argocd-server -p '{"spec": {"type": "NodePort"}}'
kubectl get svc argocd-server
ssh -fNT -L 31443:10.108.247.168:31443 lorraynesantos@cloud2

argocd login localhost:31443 --username lorraynesantos --password 14484d1c6776319b765e53bc6c49ed16 --insecure
argocd proj list

# Sincronizar o projeto no ArgoCD
kubectl apply -f argo.yaml
argocd app sync songs

# Testar a API no Kubernetes
kubectl get svc playlist-recommendation-service
wget --server-response \
   --output-document response.out \
   --header='Content-Type: application/json' \
   --post-data '{"songs": ["Unforgettable", "XO TOUR Llif3"]}' \
   http://<SERVICE_CLUSTER_IP>:52041

# Comandos adicionais
kubectl delete -f deployment.yaml
kubectl delete -f service.yaml
kubectl delete -f volume.yaml
kubectl delete -f pvc.yaml
